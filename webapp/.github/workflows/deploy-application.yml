# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

env:
  ARTIFACT_NAME: csye6225-webapp-${{github.sha}}.zip
  CODEDEPLOY_APPLICATION_NAME: csye6225-webapp
  CODEDEPLOY_APPLICATION_DEPLOYMENT_GROUP_NAME: csye6225-webapp-deployment
  AWS_REGION: us-east-1

on:
  push:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository to build ami
        uses: actions/checkout@v2

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Build Deployment Artifact
        run: |
          mkdir codedeploy_artifact
          zip -r ${{ env.ARTIFACT_NAME }} target/web-app-0.0.1-SNAPSHOT.jar scripts/*.sh appspec.yml cloudwatch_config.json
          pwd
          ls -al
          mv ${{ env.ARTIFACT_NAME}} codedeploy_artifact/
          ls -al
          pwd
          cd codedeploy_artifact
          pwd
          ls -al
          cd ..
          pwd
          ls -al

      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1


      - name: Copy Artifact to S3
        run: |
          aws s3 sync ./codedeploy_artifact s3://${{ secrets.S3_CODEDEPLOY_BUCKET }}


      - name: CodeDeploy API call
        run: |
          output=$(aws deploy create-deployment \
                     --application-name ${{ env.CODEDEPLOY_APPLICATION_NAME }} \
                     --deployment-config-name CodeDeployDefault.OneAtATime \
                     --deployment-group-name ${{ env.CODEDEPLOY_APPLICATION_DEPLOYMENT_GROUP_NAME }} \
                     --description "CSYE6225 Deployment" \
                     --s3-location bucket=${{ secrets.S3_CODEDEPLOY_BUCKET }},bundleType=zip,key=${{ env.ARTIFACT_NAME }} \
                     --region ${{ env.AWS_REGION }} \
                     --output json)
          echo $output
          deployment_id=$(echo $output | jq -r '.deploymentId')
          aws deploy wait deployment-successful --deployment-id $deployment_id


